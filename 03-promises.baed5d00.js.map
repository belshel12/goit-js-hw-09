{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBAwBtC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAVgB,IAAIC,SAAQ,SAACC,EAAKC,GAChCC,YAAW,WACLN,EACFI,EAAI,CAAEN,WAAUC,UAEhBM,EAAI,CAAEP,WAAUC,S,GAEjBA,E,IA/BPT,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBACJ,IAAMC,EAASC,OAAOrB,EAAKM,YAAYgB,OACjCC,EAAQF,OAAOrB,EAAKI,WAAWkB,OAC/BE,EAAOH,OAAOrB,EAAKK,UAAUiB,OAEnC,IAAKG,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAAG,CAC/B,IAAMC,EAAYH,EAAQC,GAAQC,EAAI,GAEtClB,EAAckB,EAAGC,GACdC,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA/B,GAASgC,OAAOC,QAAQ,qBAAoCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEnEwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAA/B,GAASgC,OAAOI,QAAQ,oBAAmCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector(\"input[name='delay']\"),\n  stepInput: document.querySelector(\"input[name='step']\"),\n  amountInput: document.querySelector(\"input[name='amount']\"),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const amount = Number(refs.amountInput.value);\n  const delay = Number(refs.delayInput.value);\n  const step = Number(refs.stepInput.value);\n\n  for (i = 1; i <= amount; i += 1) {\n    const nextDelay = delay + step * (i - 1);\n\n    createPromise(i, nextDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","addEventListener","evt","preventDefault","amount","Number","value","delay1","step","i","nextDelay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.baed5d00.js.map"}